{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport * as React from 'react';\nimport { Component, Navigation } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport useToken from \"./useToken\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Constants from 'expo-constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction setToken(userToken) {\n  sessionStorage.setItem('token', JSON.stringify(userToken));\n}\n\nfunction getToken() {\n  var tokenString = sessionStorage.getItem('token');\n  var userToken = JSON.parse(tokenString);\n  return userToken == null ? void 0 : userToken.token;\n}\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var styles = StyleSheet.create({\n        buttons: {\n          borderRadius: 20,\n          borderColor: 'grey',\n          marginTop: '5%',\n          marginHorizontal: \"20%\",\n          textAlign: 'center',\n          borderWidth: 2\n        },\n        buttonsText: {\n          margin: '1%',\n          textAlign: 'center',\n          color: 'grey',\n          fontSize: 25\n        },\n        background: {\n          flex: 1,\n          justifyContent: 'center',\n          backgroundColor: 'pink',\n          padding: 8\n        },\n        title: {\n          backgroundColor: 'none',\n          margin: 1,\n          fontSize: 50,\n          color: 'grey',\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      });\n      return _jsxs(View, {\n        style: styles.background,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"CampusDate\"\n        }), _jsx(Link, {\n          to: \"/signup\",\n          children: _jsx(Pressable, {\n            style: styles.buttons,\n            children: _jsx(Text, {\n              style: styles.buttonsText,\n              children: \"Sign Up\"\n            })\n          })\n        }), _jsx(Link, {\n          to: \"/login\",\n          children: _jsx(Pressable, {\n            style: styles.buttons,\n            children: _jsx(Text, {\n              style: styles.buttonsText,\n              children: \"Log In\"\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sage/Documents/GitHub/CampusDate/mern/campusdate/src/App.js"],"names":["logo","React","Component","Navigation","BrowserRouter","Route","Routes","Link","useToken","Constants","setToken","userToken","sessionStorage","setItem","JSON","stringify","getToken","tokenString","getItem","parse","token","App","styles","StyleSheet","create","buttons","borderRadius","borderColor","marginTop","marginHorizontal","textAlign","borderWidth","buttonsText","margin","color","fontSize","background","flex","justifyContent","backgroundColor","padding","title","fontWeight"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP;AACA;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAO,sCAAP;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,OAAOC,QAAP;;;;;;;AAIA,OAAOC,SAAP,MAAsB,gBAAtB;;;;AAIA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3BC,EAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAAhC;AACD;;AACD,SAASK,QAAT,GAAoB;AAClB,MAAMC,WAAW,GAAGL,cAAc,CAACM,OAAf,CAAuB,OAAvB,CAApB;AACA,MAAMP,SAAS,GAAGG,IAAI,CAACK,KAAL,CAAWF,WAAX,CAAlB;AACA,SAAON,SAAP,oBAAOA,SAAS,CAAES,KAAlB;AACD;;IAEKC,G;;;;;;;;;;;;;WACJ,kBAAS;AAEX,UAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,QAAAA,OAAO,EAAC;AACNC,UAAAA,YAAY,EAAE,EADR;AAENC,UAAAA,WAAW,EAAC,MAFN;AAGNC,UAAAA,SAAS,EAAC,IAHJ;AAINC,UAAAA,gBAAgB,EAAC,KAJX;AAKNC,UAAAA,SAAS,EAAE,QALL;AAMNC,UAAAA,WAAW,EAAE;AANP,SADuB;AAS/BC,QAAAA,WAAW,EAAC;AACVC,UAAAA,MAAM,EAAC,IADG;AAEVH,UAAAA,SAAS,EAAE,QAFD;AAGVI,UAAAA,KAAK,EAAC,MAHI;AAIVC,UAAAA,QAAQ,EAAC;AAJC,SATmB;AAe/BC,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAE,CADI;AAEVC,UAAAA,cAAc,EAAE,QAFN;AAGVC,UAAAA,eAAe,EAAE,MAHP;AAIVC,UAAAA,OAAO,EAAE;AAJC,SAfmB;AAqB/BC,QAAAA,KAAK,EAAE;AACLF,UAAAA,eAAe,EAAC,MADX;AAELN,UAAAA,MAAM,EAAE,CAFH;AAGLE,UAAAA,QAAQ,EAAE,EAHL;AAILD,UAAAA,KAAK,EAAE,MAJF;AAKLQ,UAAAA,UAAU,EAAE,MALP;AAMLZ,UAAAA,SAAS,EAAE;AANN;AArBwB,OAAlB,CAAf;AAoCI,aACA,MAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACc,UAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,MAAM,CAACmB,KAApB;AAAA;AAAA,UADF,EAGE,KAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA,oBACA,KAAC,SAAD;AAAW,YAAA,KAAK,EAAEnB,MAAM,CAACG,OAAzB;AAAA,sBACA,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEH,MAAM,CAACU,WAApB;AAAA;AAAA;AADA;AADA,UAHF,EASE,KAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA,oBACA,KAAC,SAAD;AAAW,YAAA,KAAK,EAAEV,MAAM,CAACG,OAAzB;AAAA,sBACA,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEH,MAAM,CAACU,WAApB;AAAA;AAAA;AADA;AADA,UATF;AAAA,QADA;AAkBH;;;;EAzDiB9B,S;;AA2DlB,eAAemB,GAAf","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport * as React from 'react';\r\nimport { Component, Navigation } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import Login from './login/login.component\";\r\nimport useToken from './useToken';\r\n\r\n// import * as React from 'react';\r\nimport { Text, View, StyleSheet, Pressable, Button, Alert} from 'react-native';\r\nimport Constants from 'expo-constants';\r\n\r\n// import { NavigationContainer } from 'react-navigation/native';\r\n// import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nfunction setToken(userToken) {\r\n  sessionStorage.setItem('token', JSON.stringify(userToken));\r\n}\r\nfunction getToken() {\r\n  const tokenString = sessionStorage.getItem('token');\r\n  const userToken = JSON.parse(tokenString);\r\n  return userToken?.token\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\nconst styles = StyleSheet.create({\r\n  buttons:{\r\n    borderRadius: 20,\r\n    borderColor:'grey',\r\n    marginTop:'5%',\r\n    marginHorizontal:\"20%\",\r\n    textAlign: 'center',\r\n    borderWidth: 2,\r\n  },\r\n  buttonsText:{\r\n    margin:'1%',\r\n    textAlign: 'center',\r\n    color:'grey',\r\n    fontSize:25,\r\n  },\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: 'pink',\r\n    padding: 8,\r\n  },\r\n  title: {\r\n    backgroundColor:'none',\r\n    margin: 1,\r\n    fontSize: 50,\r\n    color: 'grey',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n    // const {token,setToken} = useToken();\r\n\r\n    // if(!token) {\r\n      //return <Login setToken={setToken} />\r\n    // }\r\n\r\n    return (\r\n    <View style={styles.background}>\r\n      <Text style={styles.title}>CampusDate</Text>\r\n      \r\n      <Link to=\"/signup\">\r\n      <Pressable style={styles.buttons}>\r\n      <Text style={styles.buttonsText}>Sign Up</Text>\r\n      </Pressable>\r\n      </Link>\r\n        \r\n      <Link to=\"/login\">\r\n      <Pressable style={styles.buttons}>\r\n      <Text style={styles.buttonsText}>Log In</Text>\r\n      </Pressable>\r\n      </Link>\r\n\r\n    </View>\r\n  );\r\n}}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}